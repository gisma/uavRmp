[{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"Unmanned Aerial Vehicle R based Mission Planning uavRmp package designed UAV autonomous mission planning. first place simple open source planning tool planning survey flights low budget drones based R. provide easy workflow planning autonomous surveys including battery-dependent task splitting save departures approaches monitoring chunks. range usage kinds aof aerial photography widespread Digital Surface Models (DSM), Digital Elevation Models (DEM), orthophotos, altitude point clouds landuse/landscape classification, NDVI forest structure classifications …","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"note","dir":"Articles","previous_headings":"Introduction","what":"Note","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"WARNING: Take care! still lot construction zones around. package far beyond mature state. Please implement double check systems planning performing autonomous flight missions. lot chances make small mistake may yield damage UAV even worse involving people, animals non-cash assets. Check risk - use parachute systems , even everything running like charm, keep alert!","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"supported-uav-platforms","dir":"Articles","previous_headings":"Introduction","what":"Supported UAV platforms","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"now dedicated low budget rtf-UAVs DJI Phantom (P4) series Pixhawk flightcontroller family. However current future support focus Pixhawk based UAVs . open UAV community focused PixHawk autopilot unit MissionPlanner QGroundcontrol software. well documented provide APIs easy use GUIs. Nevertheless missing planning capability (APM Planner) terrain following autonomous flight planning tool, also dealing battery-dependent task splitting save departures approaches (MissionPlanner) yet. commmercial competitors like powerful ugcs software package still lacking advanced capability generating smooth save surface following flight tasks low AGL altitudes. uavRmd bridges gap generates MAVLINK format compliant mission files can uploaded Pixhawk controller using integrated function externally Ground Control Station software. DJI: reason using DJI UAVs absolute straightforward usage. Everybody can fly DJI price simplicity hermetically closed system. Litchi app provides addition cloud based mission planer offline/standalone interface upload CSV formated way point file autonomous flights Phantom. PixHawk/3DR Solo: open UAV community focused PixHawk autopilot unit Mission Planner software. well documented several APIs provided. Nevertheless terrain following autonomous flight planning tool available. ’‘’uavRst’’’ supports MAVLINK common message format can uploaded directly Pixhawk controller using Ground Control Station software upload2Solo function.","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"the-family","dir":"Articles","previous_headings":"Introduction","what":"The family","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"package family consists 4 parts: flight planning uavRmp remote sensing uavRrst","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"easiest way obtain fairly good runtime enviroment setup Linux dual boot system VB. interested setting clean Xubuntu Mint Linux use postinstall script installing stuff. using Solo related functions need install dronekit python libs addition. full list necessary libaries binaries beyond R soon provided. install github need installed devtools package. want install dependencies use:","code":"devtools::install_github(\"gisma/uavRmp\", ref = \"master\") devtools::install_github(\"gisma/uavRmp\", ref = \"master\", dependencies = TRUE)"},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"the-core-planning-tools","dir":"Articles","previous_headings":"","what":"The core planning tools","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"core planning tools makeAP (make area plan) makeTP (make target plan) creating either intermediate flight control files DJI Phantom 3x UAVs ready upload control files Pixhawk based UAVs like 3DR Solo. intermediate DJI control files expected used proprietary Litchi flight control app, Pixhawk/3DR Solo files using MAVLINK common message format. basic idea provide easy use workflow controlling rtf UAVs autonomous survey missions.","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"the-types-of-mission-tasks","dir":"Articles","previous_headings":"The core planning tools","what":"The types of mission tasks","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"define flight area provide either 4 Points (3 lines). may take complex vectors like multi point polygon, first 4 coordinates x1, x2, x3 x4 (latter launching position) used exactly order. take rectangle 4th corner coordinate launching point. concept looking like following sketch: coordinates length line angle used calculate extend parallels flight plan according flight altitude, overlap etc. NOTE: flight direction depends order points. flightPlanMode = \"tracks\". result look like . flightPlanMode = \"waypoints\" result equal spatial distribution way points: waypoints optimal autonomous flights calm conditions complex terrain camera takes picture every way point. track optimal relatively plain areas automatically triggered picture capturing DJI : Automatically picture capturing time interval works within range remote control UAV needs trigger signal taking pictures.","code":"x2------x3           x2-------x1 | a                 / |                  / |   x4            / x4 |  /             / / x1/             x3/ #--#  #-->             #-----# |  |  |               /     |  |  |              #-----# |  |  |                   / #  #--#         <--#-----# #--#  #-->             #--#--# |  |  |               /     #  #  #              #--#--# |  |  |                   / #  #--#         <--#--#--#"},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"terrain-following-task","dir":"Articles","previous_headings":"The core planning tools","what":"Terrain following task","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"argument followSurface = TRUE switch fixed AGL flight altitude terrain following flight altitude. NOTE: aware DJI UAV calibrating altitude launch position field! need either correct coordinate altitude high resolution DEM get good(!) estimation launch position altitude. must choose clearly defined reliable launching position map field. one fails, made experience aircraft probably hit terrain… Let us assume defined flight altitude 50m. According launching point altitude UAV act like following sketch shows: avoid negative impacts Phantom 3 auto-calibration, launch altitude used correct flight altitude according : adapted flight altitude always seen flight altitude highest terrain altitude: get fixed scale flight launch altitude used correct flight altitude according : setting terrainfollowing = true calculated way point. adapted flight altitude looks like:","code":"............... x_(uav)_x ........... UAV started at 30m altitude results in                                          a \"real\" flight altitude of 30m + 50m => 80m                  ___60m____                |          |        30m _x__|          |       ____|               |___   ___|                        |____                 ___60m____     ..........|          |............ UAV started at 0 m altitude results in            ___|          |___          \"real\" flight altitude of 50m above 0m       ____|                  |   ___|                       |__x__ 0m maximumAltitude_of_surveyArea + altitude_of_launchposition ...................................... real altitude of UAV: 110m                 ___60m____               |          |        30m _x_|          |___       ____|                  |   ___|                       |______ ```maximumAltitude of surveyArea + altitude of launch position``` ..........               |          |           ....|          |....      ....|     ___60m____    | ....|         |          |   |....... real altitude of UAV: 50m        30m _x_|          |___       ____|                  |   ___|                       |___x___ 0m"},{"path":[]},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"overview-of-the-task","dir":"Articles","previous_headings":"Basic mission planning workflow","what":"Overview of the task","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"recipe deals effective safe planning autonomous flight. provides basic information used hardware software well supplemental data nice haves.","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"skills-you-will-learn","dir":"Articles","previous_headings":"Basic mission planning workflow","what":"Skills you will learn","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"basic workflow planning good aerial target oriented flight mission. extended version find explanations hints improving planning. Even can assume use uavs autonomous flights somehow “operational”, always keep mind avoiding negative impacts result ￼responsible focused planning.","code":"Please keep in mind that autonomous UAVs can harm the the pilot and environment."},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"things-you-need","dir":"Articles","previous_headings":"Basic mission planning workflow","what":"Things you need","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"R uavRmp package Digital Surface Model (DSM) data DJI Phantom/Pixhawk UAV DJI Litchi flight App Pixhawk QGroundcontrol Time work ","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"general-workflow","dir":"Articles","previous_headings":"Basic mission planning workflow","what":"General Workflow","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"Identify area, digitize/type coords 3 corners launching position Adjust flight parameters needs generate flight control files Convert upload mission control files either directly tablet/smartphone alternatively via Litchi cloud. Make extensive preflight check Fly mission","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"basic-examples","dir":"Articles","previous_headings":"Basic mission planning workflow","what":"Basic examples","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"first example introduce basic usage folder structure. Addressed issues: Create reliable DSM near surface retrieval high resolution pictures Create orthophoto visual inspection POIs","code":"Purpose: Survey flight over flat terrain to generate DSM and orthophoto. It is described for the Phantom 3 and Litchi only."},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"the-short-way","dir":"Articles","previous_headings":"Basic mission planning workflow","what":"The short way","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"Digitize 3 corner points area want map addition fourth point position planned UAV launch. Save //firstSurvey.kml//. NOTE: first two points determine flight angle direction second third coordinate determine width area. want save SD card, open Litchi Mission website click button Missions->Import. Next navigate control file firstsurvey_1001.csv (’ll find folder projectDir/mission/date/control). exporting choose Missions->Save navigate/upload missions subfolder Litchi app. ’s . Even simple option connect litchi cloud. logged account synchronizing data soon start litchi app.","code":"require(uavRmp)    # get example DEM data    fn <- system.file(\"extdata\", \"mrbiko.tif\", package = \"uavRmp\")    fa <- system.file(\"extdata\", \"flightarea.kml\", package = \"uavRmp\")    # preset = \"uav\" supress all not necessary tools    vecDraw(mapCenter = c(50.855,8.691),preset=\"uav\")       # Use the digitized data (assumed to be named \"firstSurvey.json\")    # and the example DEM to calculate a flight control file    fp <- makeAP(surveyArea = fa,                 demFn = fn)"},{"path":[]},{"path":[]},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"build-in-vecdraw-function","dir":"Articles","previous_headings":"Basic mission planning workflow > The long way > Digitizing the survey area","what":"Build in vecDraw function","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"want plan flight less flat terrain upper Lahn-valley. First load libraries next start small digitizing tool provided ‘’uavRmp’’. Digitized Flight Area Feel free digitize - similar figure - four points needed: P1, P2, P3 define extend angles mission area. P1 starting point survey Flight direction angle along distance defined P1->P2 P2->P3 defines cross distance P4 launching point. Try digitize carefully getting optimal launch altitude. optimal deliniation flight area, please keep mind hints: - makes sense put launching position somewhere near within proposed survey area respect optimal visibility UAV shortest possible distance radio controller keep contact UAV. - helpful fly along structures necessary climbs end track. saves energy cases climbs can controlled easier. - Try identify launching point ** carefully** ** reliable**. UAV taking position home (reference) point position altitude. Finish digitizing save KML file. Take care add correct extensions ’‘.kml’’ (‘’makeAP()’’ function requiring correct extension). current example save kml file named ‘’firstSurvey.kml’’.","code":"You may take any other tool to digitize the survey area as well as you may type the coordinates on Stdin. # load uavRmp  require(uavRmp)   # start digitizing tool with preset = \"uav\" for a reduced toolbar  # see ?leafDraw for more information  vecDraw(mapCenter = c(50.855,8.691),preset=\"uav\")"},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"missionplanner-or-qgroundcontrol-survey-feature","dir":"Articles","previous_headings":"Basic mission planning workflow > The long way > Digitizing the survey area","what":"Missionplanner or Qgroundcontrol survey feature","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"want plan flight structured terrain upper Lahn-valley. Start qGroundcontrol navigate Mission tab open Pattern->Survey. Start digitizing pattern want also fill values right sided menus camera angel overlap . Save appropriate folder. use planning file set makeAP switch:","code":"useMP = TRUE"},{"path":[]},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"working-directories-and-other-structural-defaults","dir":"Articles","previous_headings":"Basic mission planning workflow > The long way > Calling makeAP","what":"Working directories and other structural defaults","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"lot optional arguments available helps control generation autonomous flight plan. first use case keep simple possible. First focus arguments organize project. results stored fixed folder structure. root folder set argument projectDir. e.g. ’‘~/proj/uav’‘. current working directory generated locationName always subfolder ’‘projectDir’‘. case set ’‘firstSurvey’‘. resulting folder specified location speciefied project ’‘~/proj/uav/firstsurvey’‘. According date planning following subfolder structure set . mission control files folder named’‘control’’ used, log files saved log folder temporary data sets stored folder called ‘’run’’. PLEASE NOTE: Optionally used data files copied folder called ‘’data’‘, located directly ’‘projectDir’’ folder. project structure look like figure. Example uavRmp folder structure","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"the-used-arguments","dir":"Articles","previous_headings":"Basic mission planning workflow > The long way > Calling makeAP","what":"The used arguments","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"‘’flightAltitude’’ set (legal) maximum 100m, ‘’flightPlanMode’’ set ‘’track’’ finally DEM area 20m resulution used retrieve altitude launching point. use example data first convert valid GeoTiff file. script generates: R objects visualisation log file flight control file(s). three important even quick inspection generated objects time sufficient. log file dumps important parameters calculated mission. important calculated mission speed picture rate based estimation mission time. Using mapview package can easily visualize results. example shows footprints images (blue), surveyArea (red), turnpoints track (blue circles) launch position (red). first autonomous mission","code":"# get example DEM data  fn <- system.file(\"extdata\", \"mrbiko.tif\", package = \"uavRmp\")  fa <- system.file(\"extdata\", \"flightarea.kml\", package = \"uavRmp\")   fp<-makeAP(surveyArea=fa,             maxSpeed =35,             demFn = fn) require(mapview)  mapview(fp[[5]],color=\"red\", alpha.regions =0.1,lwd=0.5)+  mapview(fp[[1]],lwd=1,cex=4)+  mapview(fp[[3]],color=\"red\",cex=5)+  mapview(fp[[4]],color=\"darkblue\", alpha.regions =0.1,lwd=0.5)"},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"export-to-the-flight-app","dir":"Articles","previous_headings":"Basic mission planning workflow > The long way","what":"Export to the flight app","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"DJI: Open Litchi Mission click button ‘’Missions->Import’’ navigate control file firstSurvey_1001.csv. export click ‘’Missions->Save’’. Solo solo_upload(\"export_1001_solo.waypoints\") Ready take - ’s first flight plan!","code":""},{"path":[]},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"planning-your-survey","dir":"Articles","previous_headings":"Field Guide","what":"Planning your Survey","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"important setup survey appropriate overlap reliable stitching results. overlap small vice versa fly fast get poor results. flight altitude camera settings. find suggested values. Ground Resolution typical cameras","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"suggested-overlap","dir":"Articles","previous_headings":"Field Guide","what":"Suggested Overlap","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"Front Overlap 80%, Side Overlap 60%","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"camera-speed","dir":"Articles","previous_headings":"Field Guide","what":"Camera Speed","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"Depending product manufactor cameras deal different speeds. NOTE: speed can continously achieved taken account. Currently picture rate 2 sconds maximum speed. strongly recommended use (available) autonoumous camera timer (time lapse) controlling pictures interval.","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"flight-speed","dir":"Articles","previous_headings":"Field Guide","what":"Flight Speed","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"average fasted SD Cards able achieve average speed 2 seconds/JPEG (Raw + JPEG 3.5 seconds) image. result taking pictures every 2 seconds sporty attempt. Flight speed recommodations meeting needs. Let us assume fly task field view (FOV) DJI 4K camera 35 meters ground level (AGL). derive maximum flight distance picture picture meter given overlap calculate: \\(FOV*agl*(1-overlap) = 1,71*35*0,2 = 12 m\\) can take picture every 2 seconds max speed : \\(12 m / 2 s = 6 m/s\\)","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"rule-of-thumb","dir":"Articles","previous_headings":"Field Guide","what":"Rule of thumb","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"JPG pictures: \\(0,15 * agl (RAW; 0,07 * agl)\\) 100 meter AGL flight set speed maximum : \\(0,15 * 100 = 15 m/s (54 km/h)\\) flight 35m agl roughly 5,25 m/s ## DEM/DSM Data fly wide open flat area need additional data. fly middle range mountains, forests similar complex structures need digtal surface model (DSM/DEM) retrieving optimal safe flight path.","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"weather","dir":"Articles","previous_headings":"Field Guide","what":"Weather","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"Actually also check weather. Forget flying wind speed 4 Beaufort - UAV falcon.","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"workflow-in-the-field","dir":"Articles","previous_headings":"Field Guide","what":"Workflow in the field","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"Plan r flight adequate planning tool home control field (see examples, check flightplan) Setup Remote Controller Setup controlling device Setup UAV Setup safety system (use parachute!) Setup camera(s) Start RC Start UAV Start Camera Load Task Fly Task simple seems full pitfalls. Therefore like provide checklist:","code":""},{"path":"https://r-spatial.github.io/uavRmp/articles/uavRmp_1.html","id":"pretask-check","dir":"Articles","previous_headings":"Field Guide","what":"Pretask Check","title":"Unmanned Aerial Vehicle R based Mission Planning","text":"batteries fully charged remote control charged props cables parachute cleanup MicroSD cards charge camera(s) configure camera(s) charger minute book power bank Tools UAV Tape, glue etc. Table, chairs etc. Survey checked Task stored controller (app) offline maps loaded insurance valid common flight permission specific permissions necessary inform flight security authorithy necessary inform local air control","code":""},{"path":"https://r-spatial.github.io/uavRmp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chris Reudenbach. Maintainer, author. Marvin Ludwig. Contributor. Sebastian Richter. Contributor. Florian Detsch. Contributor. Hanna Meyer. Contributor.","code":""},{"path":"https://r-spatial.github.io/uavRmp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reudenbach C (2022). uavRmp: UAV Mission Planner. R package version 0.5.7, https://github.com/gisma/uavRmp.","code":"@Manual{,   title = {uavRmp: UAV Mission Planner},   author = {Chris Reudenbach},   year = {2022},   note = {R package version 0.5.7},   url = {https://github.com/gisma/uavRmp}, }"},{"path":"https://r-spatial.github.io/uavRmp/index.html","id":"unmanned-aerial-vehicle-r-based-mission-planning---uavrmp","dir":"","previous_headings":"","what":"Unmanned Aerial Vehicle R based Mission Planning - uavRmp","title":"UAV Mission Planner","text":"uavRmp package designed uav autonomous mission planning. first place simple open source planning tool monitoring flights low budget drones based R. provide easy workflow planning autonomous surveys including battery-dependent task splitting, save departures, approaches monitoring chunks. belongs uavR package family provides functionality pre- post-processing well analysis derived data.","code":""},{"path":"https://r-spatial.github.io/uavRmp/index.html","id":"supported-uav-platforms","dir":"","previous_headings":"","what":"Supported UAV platforms","title":"UAV Mission Planner","text":"now uavRmp package dedicated low budget rtf-UAVs (ready--fly) DJI 3 Phantom series Pixhawk based platforms 3DR Solo. However future support focus Pixhawk based UAVs. core planning tool makeFP (make flight plan) creates either intermediate flight control files DJI Phantom x UAVs ready upload control files 3DR Solo. dji control files designed using proprietary Litchi flight control app exchange format, 3DR Solo files using MAVLINK common message format, used PixHawk flight controller family. majority open UAV community using PixHawk autopilot unit planning probably MissionPlanner bit basic QGroundControl ground station software. well documented provide APIs (Application program interface) easy use GUIs (graphical user interface). Nevertheless poor planning support terrain following autonomous flights (basically SRTM data) straightforward support battery-dependent task splitting save departures approaches (MissionPlanner). now affordable powerful UgCS software provides auf mentioned capabilities. However challenging use especially fast deployment small local flight task typically requested fieldwork. uavRmp bridges gap generates MAVLINK format compliant mission files can uploaded Pixhawk controller using integrated function externally Ground Control Station software.","code":""},{"path":"https://r-spatial.github.io/uavRmp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"UAV Mission Planner","text":"easiest way obtain fairly good runtime enviroment setup Linux dual boot system VB. interested setting clean Xubuntu Mint Linux can use postinstall script installing stuff. using Solo related functions need install python libs addition. full list necessary libraries binaries beyond R soon provided. install actual version github need installed devtools package.","code":"devtools::install_github(\"gisma/uavRmp\", ref = \"master\")"},{"path":"https://r-spatial.github.io/uavRmp/reference/copyDir.html","id":null,"dir":"Reference","previous_headings":"","what":"copyDir — copyDir","title":"copyDir — copyDir","text":"copyDir copy image data corresponding folder","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/copyDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"copyDir — copyDir","text":"","code":"copyDir(fromDir, toProjDir, pattern = \"*\")"},{"path":"https://r-spatial.github.io/uavRmp/reference/copyDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"copyDir — copyDir","text":"fromDir character path image data toProjDir character path projRootDir pattern character string pattern filtering  file list","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/extractExifr.html","id":null,"dir":"Reference","previous_headings":"","what":"Select UAV Images Information — extractExifr","title":"Select UAV Images Information — extractExifr","text":"extract returns specific exif information list images","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/extractExifr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select UAV Images Information — extractExifr","text":"","code":"extractExifr(path)"},{"path":"https://r-spatial.github.io/uavRmp/reference/extractExifr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select UAV Images Information — extractExifr","text":"path path images files","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/extractExifr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select UAV Images Information — extractExifr","text":"data.frame image positions travel distance","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/initProj.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines and creates folders and variables — initProj","title":"Defines and creates folders and variables — initProj","text":"Defines creates (necessary) folders variables set SAGA path variables system variables exports variables global environment","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/initProj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines and creates folders and variables — initProj","text":"","code":"initProj(   projRootDir = getwd(),   projFolders = c(\"log/\", \"control/\", \"run/\", \"data/\") )"},{"path":"https://r-spatial.github.io/uavRmp/reference/initProj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines and creates folders and variables — initProj","text":"projRootDir project github root directory (github name) projFolders list subfolders project","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeAP.html","id":null,"dir":"Reference","previous_headings":"","what":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","title":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","text":"basic idea provide easy use workflow controlling rtf-UAVs planning autonomous surveys retrieve aerial data sets.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeAP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","text":"","code":"makeAP(   projectDir = tempdir(),   locationName = \"flightArea\",   surveyArea = NULL,   flightAltitude = 100,   launchAltitude = NULL,   followSurface = FALSE,   followSurfaceRes = NULL,   demFn = NULL,   altFilter = 1,   horizonFilter = 30,   flightPlanMode = \"track\",   useMP = FALSE,   presetFlightTask = \"remote\",   overlap = 0.8,   maxSpeed = 20,   maxFlightTime = 10,   picRate = 2,   windCondition = 0,   uavType = \"pixhawk\",   cameraType = \"MAPIR2\",   cmd = 16,   uavViewDir = 0,   djiBasic = c(0, 0, 0, -90, 0),   dA = FALSE,   heatMap = FALSE,   picFootprint = FALSE,   rcRange = NULL,   copy = FALSE,   runDir = tempdir(),   gdalLink = NULL )"},{"path":"https://r-spatial.github.io/uavRmp/reference/makeAP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","text":"projectDir character path main folder several locations can hosted, default tempdir() locationName character path location folder tasks plot hosted, default \"flightArea\" surveyArea may provide either coordinates c(lon1,lat1,lon2,lat2,lon3,lat3,launchLat,launchLon) OGR compatible file (prefunable find inherited method function ‘makeAP’ signature ‘\"missing\"’erably geoJSON KML) least 4 coordinates describe flight area. fourth coordinate launch position. find explanation seealso. flightAltitude set default flight altitude mission. assumed UAV started highest point surveyArea otherwise defined position launching. launchAltitude absolute altitude launching position. overwrite DEM based estimation value -9999 followSurface boolean  TRUE performs altitude correction mission's flight altitude using additional DEM data. DEM data provided followSurface TRUE, SRTM data downloaded used. explanation seealso followSurfaceRes horizontal step distance analyzing DEM altitudes demFn filename corresponding DEM data file. altFilter followingTerrain equal TRUE altFilter threshold value accepted altitude difference (m) two way points. value exceeded, way point omitted due fact 99 way points per mission allowed. horizonFilter integer filter size rolling filter kernel flight track. Must multiplied followSurfaceRes get spatial extent flightPlanMode type flight plan. Available : \"waypoints\", \"track\", \"manual\". useMP default FALSE switches use missionplanner/Qgroundcontrolplanner survey planning base presetFlightTask (DJI ) strongly recommended use \"remote\"  Options : \"simple_ortho\" takes one picture/way point, \"multi_ortho\" takes 4 picture waunable find inherited method function ‘makeAP’ signature ‘\"missing\"’unable find inherited method function ‘makeAP’ signature ‘\"missing\"’ypoint, two vertically two forward backward viewing direction Angele -60deg, \"simple_pano\" takes 360 deg panorama picture \"remote\" assumes camera controlled remote control (RC) overlap overlapping pictures percent (1.0 = 100) maxSpeed cruising speed maxFlightTime user defined estimation lipo lifetime (20 min default) picRate fastest stable interval (s) shooting pictures windCondition 1= calm 2= light air 1-5km/h, 3= light breeze 6-11km/h, 4=gentle breeze 12-19km/h 5= moderate breeze 20-28km/h uavType type uav. currently \"djip3\" \"solo\" supported cameraType depending uav system dji dji4k default solo can choose GP3_7MP GP3_11MP MAPIR2 cmd mavlink command uavViewDir dview direction uav djiBasic c(0,0,0,-90)  curvesize (DJI ) controls curve angle uav passing way points. default set (= 0.0).  rotationdir (DJI ) camera control parameter set UAV basic turn direction right (0) left (1)  gimbalmode (DJI ) camera control parameter 0 deactivates gimbal control 1 activates gimbal focusing POIs 2 activates gimbal focus interpolate field view angel gimbalpitchangle  gimbalpitchangle (DJI ) vertical angle camera  +30 deg..-90 deg  actiontype (DJI ) individual actionype settings camera c(1,1,...)  actionparam (DJI ) corresponding parameter individual actiontype c(0,0,...) uavViewDir viewing direction camera default 0 dA TRUE real extent used DEM returned helpful low altitudes flight planning heatMap switch calculating overlapping factor raster map picFootprint switch calculating footprint way points rcRange range estimated range remote control copy copy switch runDir character runtime folder gdalLink link GDAL binaries","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeAP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","text":"makeAP (make aerial plan) creates either intermediate flight control files DJI phantom x UAVs ready upload control files 3DR Solo/PixHawk flightcontroller. DJI control files designed using proprietary litchi flight control app exchange format, 3DR Solo/PixHawk flightcontroller files using MAVLINK common message set, used PixHawk flight controller family. implemented rudimentarily. DJI: reason using DJI absolute straightforward usage. Everybody can fly DJI price less closed system least low budget segement. workarounds like litchi app provides additionally cloud based mission planner offline/standalone interface upload CSV formated way point file autonomous flights Phantom. PixHawk flightcontroller/3DR Solo: open uav community focused PixHawk autopilot unit Mission Planner software. well documented several APIs provided. Nevertheless high resolution terrain following flight planning tool  autonomous obstacle avoiding flight missions available. makeAP creates straightforward version MAV format flight control rules ready uploaded directly Pixhawk controller using solo_upload function.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeAP.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","text":"use script need install quite lot R-packages least binary GDAL tools well SAGA GIS GRASS GIS according system needs. Please find information giswerk.org: uav based Remote Sensing giswerk.org). https://gisma.github.io/","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeAP.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","text":"Take care! still lot construction zones around. script far beyond mature state. Please control backup controls planning performing autonomous flight plans missions. lot chances make small mistake may yield damage UAV even worse involving people, animals non-cash assets. Check risk, use parachute systems even running like charm, keep alert!","code":""},{"path":[]},{"path":"https://r-spatial.github.io/uavRmp/reference/makeAP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UAV Mission Planning tool for autonomous monitoring flight tasks with respect to DSM/DEM, orthophoto data retrieval. — makeAP","text":"","code":"if (FALSE) { # Depending on the arguments, the following spatial data sets can be returned:  # lp      the planned launching position of the UAV. # wp      waypoints inclusive all information # oDEM    the original (input) digital surface model (DSM) # rDEM    the resampled (used) DSM # fp      optimized footprints of the camera # fA      flight area with at least 2 overlaps # rcA     area covered by the RC according to the range and line of sight # hm      a heatmap abundance of pictures/pixel (VERY SLOW, only if heatMap = TRUE)  ## for visualisation and vecDraw load mapview require(mapview)  ## (1) get example DEM data demFn <- system.file(\"extdata\", \"mrbiko.tif\", package = \"uavRmp\") tutorial_flightArea <- system.file(\"extdata\", \"flightarea.kml\", package = \"uavRmp\")  ## (2) simple flight, 100 meters above ground ##     assuming a flat topography,  fp <- makeAP(surveyArea = tutorial_flightArea,               demFn = demFn)                ## (3) typical real case scenario (1) ##     A flight altitudes BELOW 50 m is ambitious and risky ##     You have to use a high quality high resulution DSM ##     (here simulated with a standard DEM)  fp <- makeAP(surveyArea=tutorial_flightArea,            followSurface = TRUE,            flightAltitude = 45,            demFn = demFn,            windCondition = 1,            uavType = \"pixhawk\",            followSurfaceRes = 5,            altFilter = .75)   ## (4) typical real case scenario (2) ##     A flight altitudes BELOW 50 m is ambitious and risky ##     You have to use a high quality high resulution DSM ##     (here simulated with a standard DEM) ##     This examples used a filight panning from the QGroundcotrol Survey planning tool ##     It also used the calculations for camera footprints and so on ##     NOTE EXPERIMENTAL   demFn <- system.file(\"extdata\", \"mrbiko.tif\", package = \"uavRmp\") tutorial_flightArea <- system.file(\"extdata\", \"qgc_survey.plan\", package = \"uavRmp\") fp <- makeAP(surveyArea=tutorial_flightArea,             useMP = TRUE,             followSurface = TRUE,             demFn = demFn,             windCondition = 1,             uavType = \"pixhawk\",             followSurfaceRes = 5,              altFilter = .75)   ## (5) view results  mapview::mapview(fp$wp,cex=4, lwd=0.5)+ mapview::mapview(fp$lp,color = \"red\", lwd=1,cex=4)+ mapview::mapview(fp$fA,color=\"blue\", alpha.regions = 0.1,lwd=0.5)+ mapview::mapview(fp$oDEM,col=terrain.colors(256))    ## (6) digitize flight area using the small \"onboard\" tool vecDraw() ##     save vectors as \"kml\" or \"json\" files ##     provide full filename  +  extension!   vecDraw(preset=\"uav\") }"},{"path":"https://r-spatial.github.io/uavRmp/reference/makeGlobalVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a variable with a certain value in the R environment — makeGlobalVar","title":"Generates a variable with a certain value in the R environment — makeGlobalVar","text":"Generates variable certain value R environment","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeGlobalVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a variable with a certain value in the R environment — makeGlobalVar","text":"","code":"makeGlobalVar(name, value)"},{"path":"https://r-spatial.github.io/uavRmp/reference/makeGlobalVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a variable with a certain value in the R environment — makeGlobalVar","text":"name character string name variable value character string value variable","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeGlobalVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a variable with a certain value in the R environment — makeGlobalVar","text":"","code":"if (FALSE) {  # creates the global var `pathToData` with the value `~/home/data` makeGlobalVar(\"pathToData\",\"~/home/data\")   }"},{"path":"https://r-spatial.github.io/uavRmp/reference/makeTP.html","id":null,"dir":"Reference","previous_headings":"","what":"Flight Track Planning tool — makeTP","title":"Flight Track Planning tool — makeTP","text":"makeTP generates flight track chaining point objects respect heterogenous surface known obstacles documented DSM taking top pictures. creates single control file autonomous picture retrieval flights.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeTP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flight Track Planning tool — makeTP","text":"","code":"makeTP(   projectDir = tempdir(),   locationName = \"treePos\",   missionTrackList = NULL,   launchPos = c(8.772055, 50.814689),   demFn = NULL,   flightAltitude = 100,   climbDist = 7.5,   aboveTreeAlt = 15,   circleRadius = 1,   takeOffAlt = 50,   presetFlightTask = \"remote\",   maxSpeed = 25,   followSurfaceRes = 5,   altFilter = 0.5,   windCondition = 1,   launchAltitude = -9999,   uavType = \"pixhawk\",   cameraType = \"MAPIR2\",   copy = FALSE,   runDir = \"\" )"},{"path":"https://r-spatial.github.io/uavRmp/reference/makeTP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flight Track Planning tool — makeTP","text":"projectDir character path main folder several projects can hosted, default tempdir() locationName character base name string mission, default \"treePos\" missionTrackList character filename mission tracklist (target positions), default NULL launchPos list launch position c(longitude,latitude), default c(8.772055,50.814689) demFn character filename used DSM data file, default NULL flightAltitude numeric set AGL flight altitude (AGL provided raster model represents surface) mission, default 100 default (= 0.0). set -99 calculated swath width pictures. NOTE: makes sense followingTerrain = TRUE smooth curves. flightPlanMode = \"waypoint\" camera actions (DJI EXPERIMENTAL) DISABLED curve flights. climbDist numeric distance within uav climb caluclated save flight altitude meter, default 7.5 aboveTreeAlt numeric minimum flight height target trees meter, default 15.0 circleRadius numeric radius circle around target trees meter, default 1.0 takeOffAlt altitude numeric climb altitude uav take position meter, default 50.0 presetFlightTask character (DJI EXPERIMENTAL). NOTE: strongly recommended use default \"remote\"  options : \"simple_ortho\" takes one picture/waypoint, \"multi_ortho\" takes 4 picture waypoint, two vertically two forward backward viewing direction angele -60deg, \"simple_pano\" takes 360 deg panorama picture \"remote\" assumes camera controlled remote control (RC) maxSpeed numeric  cruising speed, default 25.0 followSurfaceRes numeric, default 5 meter. altFilter numeric allowed altitude differences bewteen two waypoints meter, default 0.5 windCondition numericoptions 1= calm 2= light air 1-5km/h, 3= light breeze 6-11km/h, 4=gentle breeze 12-19km/h 5= moderate breeze 20-28km/h, default 1 launchAltitude numeric altitude launch position. set -9999 DEM required extracting MSL, default -9999 uavType character  type UAV. Currently \"djip3\" \"pixhawk\" supported, default \"pixhawk\" cameraType character, default \"MAPIR2\". copy boolean copy used file data folder default FALSE runDir character runtime folder","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/makeTP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flight Track Planning tool — makeTP","text":"","code":"if (FALSE) { ## (1) get example DEM data dsmFn <- system.file(\"extdata\", \"mrbiko.tif\", package = \"uavRmp\") ## (2) make position flight plan makeTP  <-  makeTP(missionTrackList= tutorial_flightArea,                   demFn = dsmFn,                   uavType = \"pixhawk\",                   launchPos = c(8.679,50.856)) }"},{"path":"https://r-spatial.github.io/uavRmp/reference/maxpos_on_line.html","id":null,"dir":"Reference","previous_headings":"","what":"applies a line to a raster and returns the position of the maximum value — maxpos_on_line","title":"applies a line to a raster and returns the position of the maximum value — maxpos_on_line","text":"applies line raster returns position maximum value","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/maxpos_on_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"applies a line to a raster and returns the position of the maximum value — maxpos_on_line","text":"","code":"maxpos_on_line(dem, line)"},{"path":"https://r-spatial.github.io/uavRmp/reference/maxpos_on_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"applies a line to a raster and returns the position of the maximum value — maxpos_on_line","text":"dem raster object line sp object","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/maxpos_on_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"applies a line to a raster and returns the position of the maximum value — maxpos_on_line","text":"","code":"## load DEM/DSM  dem <- raster::raster(system.file(\"extdata\", \"mrbiko.tif\", package = \"uavRmp\"))  ## generate extraction line object line <- sp_line(c(8.66821,8.68212),c(50.83939,50.83267),ID=\"Highest Position\",runDir=runDir)  ## extract highest position maxpos_on_line(dem,line)   #>             x        y #> [1,] 8.673236 50.83685"},{"path":"https://r-spatial.github.io/uavRmp/reference/minBB.html","id":null,"dir":"Reference","previous_headings":"","what":"Rectangle flight area around points — minBB","title":"Rectangle flight area around points — minBB","text":"Creates optimal rectangle area around points","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/minBB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rectangle flight area around points — minBB","text":"","code":"minBB(points, buffer = 0, epsg = 25832)"},{"path":"https://r-spatial.github.io/uavRmp/reference/minBB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rectangle flight area around points — minBB","text":"points sf object, points want fly buffer buffer distance points rectangle; defaults 0 epsg reference system","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/minBB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rectangle flight area around points — minBB","text":"SpatialPoints: Corners flight area","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/minBB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rectangle flight area around points — minBB","text":"code based Rotating Caliper Algorithm mostly copy pasted (see reference)","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/minBB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rectangle flight area around points — minBB","text":"http://dwoll.de/rexrepos/posts/diagBounding.html","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/minBB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rectangle flight area around points — minBB","text":"Marvin Ludwig","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/qgc_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Flight area planning Qgroundcontrol survey data — qgc_survey","title":"Flight area planning Qgroundcontrol survey data — qgc_survey","text":"Flight area planning example data typically needed planning autonomous survey flight task. task planned QGroundcontrol survey tool.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/qgc_survey.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flight area planning Qgroundcontrol survey data — qgc_survey","text":"Faculty Geography Marburg","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/qgc_survey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flight area planning Qgroundcontrol survey data — qgc_survey","text":"Flight area planning Qgroundcontrol survey data","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/read_gpx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read GPX file — read_gpx","title":"Read GPX file — read_gpx","text":"Read GPX file. default, reads possible GPX layers, returns shapes layers features.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/read_gpx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read GPX file — read_gpx","text":"","code":"read_gpx(   file,   layers = c(\"waypoints\", \"tracks\", \"routes\", \"track_points\", \"route_points\") )"},{"path":"https://r-spatial.github.io/uavRmp/reference/read_gpx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read GPX file — read_gpx","text":"file GPX filename (including directory) layers vector GPX layers. Possible options \"waypoints\", \"tracks\", \"routes\", \"track_points\", \"route_points\". dedault, layers read.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/read_gpx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read GPX file — read_gpx","text":"layer features sp object returned.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/read_gpx.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read GPX file — read_gpx","text":"cloned tmap","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/read_gpx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read GPX file — read_gpx","text":"","code":"if (FALSE) { ## for visualisation we are using mapview require(mapview) ## assign  GPX file gpxFN <- system.file(\"extdata\", \"flighttrack.gpx\", package = \"uavRmp\")  ## read it gpx <- read_gpx(gpxFN, layers=c(\"tracks\"))  ## plot it plot(gpx$geometry)  }"},{"path":"https://r-spatial.github.io/uavRmp/reference/soloLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Download, reorganize and export the binary log files from 3DR Solo Pixhawk controller or the telemetry log files from the Solo radio control unit — soloLog","title":"Download, reorganize and export the binary log files from 3DR Solo Pixhawk controller or the telemetry log files from the Solo radio control unit — soloLog","text":"Wraps mavtogpx.py converter provided dronkit library). downloads optionally converts important 3DR Solo logfiles. Optionally may import geometries data sp object.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/soloLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download, reorganize and export the binary log files from 3DR Solo Pixhawk controller or the telemetry log files from the Solo radio control unit — soloLog","text":"","code":"soloLog(   logFileSample = \"recent\",   logSource = \"rc\",   logDest = tempdir(),   downloadOnly = FALSE,   netWarn = FALSE,   renameFiles = TRUE,   makeSP = FALSE )"},{"path":"https://r-spatial.github.io/uavRmp/reference/soloLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download, reorganize and export the binary log files from 3DR Solo Pixhawk controller or the telemetry log files from the Solo radio control unit — soloLog","text":"logFileSample character , options :  recent download recent logfile,  downloads logfiles, plain number e.g. 2 specific logfile. Note telemetry logfiles numbering 1 9 , recent one numbered. binary logfiles pixhawk numbering continously last 50 files exist. logSource character, options : rc = logfiles radio control, pixhawk = logfiles flightcontroller, default set  rc. radio control providing last ten telemetry data files, flight controller provides latest 50 binary logfiles. logDest character (existing) destination path logs downloaded downloadOnly logical wether download files also convert rename , default set FALSE netWarn logical wether warn waits starting connection controller. helps testing due occassional wifi shutdowns Solo, default set FALSE renameFiles logical renames log gpx files according time period, default set TRUE makeSP logical wether returning sp object gpx files , default FALSE","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/soloLog.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download, reorganize and export the binary log files from 3DR Solo Pixhawk controller or the telemetry log files from the Solo radio control unit — soloLog","text":"using Solo stuff tested Linux bash shell Windows 10. need install following python libs: sudo pip install pymavlink  sudo pip install dronekit-sitl sudo pip install dronekit  Additionally need sshpass:sudo apt-get install sshpass  please rememeber - need connected least running 3DR Solo radio control want donload data Pixhawk Solo UAV","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/soloLog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download, reorganize and export the binary log files from 3DR Solo Pixhawk controller or the telemetry log files from the Solo radio control unit — soloLog","text":"","code":"if (FALSE) { ## download recent telemetry log file from controller and convert it to gpx soloLog(logFiles = \"solo.tlog\")  ## download the last available logfile from the radio control soloLog()  ## download ALL logfiles from the radio control soloLog(logFiles = \"all\")  ## download ALL telemetry logfiles from the flight controller soloLog(logSource = \"pixhawk\",logFiles = \"all\")  ## download telementry logfile number 5  from the remote control soloLog(logSource = \"rc\",logFiles = \"5\") }"},{"path":"https://r-spatial.github.io/uavRmp/reference/solo_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload MAV compliant mission File to a 3DR Solo — solo_upload","title":"Upload MAV compliant mission File to a 3DR Solo — solo_upload","text":"solo_upload provides crude interface upload Solo mission file 3dr SOLO","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/solo_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload MAV compliant mission File to a 3DR Solo — solo_upload","text":"","code":"solo_upload(   missionFile = NULL,   connection = \"udp:10.1.1.166:14550\",   prearm = \"-1\" )"},{"path":"https://r-spatial.github.io/uavRmp/reference/solo_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload MAV compliant mission File to a 3DR Solo — solo_upload","text":"missionFile mission file upload connection valid connection string Solo default \"udp:10.1.1.166:14550\" prearm character controls prearm status Solo prearm check 0=Disabled 1=Enabled -3=Skip Baro -5=Skip Compass -9=Skip GPS -17=Skip INS -33=Skip Params/Rangefinder -65=Skip RC 127=Skip Voltage default -1 Find information prearm safety,Mission import export script.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/solo_upload.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Upload MAV compliant mission File to a 3DR Solo — solo_upload","text":"Becareful fooling around prearm stuff. kind sensitive later autonomous flights! using Solo stuff need install:  sudo pip install pymavlink; sudo pip install dronekit-sitl; sudo pip install dronekit;  sudo apt-get install sshpass Additionally need connected running 3DR Solo uav","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/solo_upload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload MAV compliant mission File to a 3DR Solo — solo_upload","text":"","code":"wp <- system.file(\"extdata\", \"MAVLINK_waypoints.txt\", package = \"uavRmp\") if (FALSE) { solo_upload( missionFile = wp) }"},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_line.html","id":null,"dir":"Reference","previous_headings":"","what":"create an spatiallineobject from 2 points — sp_line","title":"create an spatiallineobject from 2 points — sp_line","text":"create spatiallineobject 2 points, optional export shapefile","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create an spatiallineobject from 2 points — sp_line","text":"","code":"sp_line(   Y_coords,   X_coords,   ID = \"ID\",   proj4 = \"+proj=longlat +datum=WGS84 +no_defs\",   export = FALSE,   runDir )"},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create an spatiallineobject from 2 points — sp_line","text":"Y_coords Y/lat coordinates X_coords X/lon coordinates ID id line proj4 projection export write shafefile default = F runDir character runtime folder","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create an spatiallineobject from 2 points — sp_line","text":"","code":"## creating sp spatial point object line <- sp_line(c(8.770367,8.771161,8.771536),                 c(50.815172,50.814743,50.814875),                 runDir=tempdir())  ## plot it raster::plot(line)"},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_point.html","id":null,"dir":"Reference","previous_headings":"","what":"create an spatialpointobject from 1 points — sp_point","title":"create an spatialpointobject from 1 points — sp_point","text":"create spatial point object 1 point optionally export shapefile","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create an spatialpointobject from 1 points — sp_point","text":"","code":"sp_point(   lon,   lat,   ID = \"point\",   proj4 = \"+proj=longlat +datum=WGS84 +no_defs\",   export = FALSE,   runDir = runDir )"},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create an spatialpointobject from 1 points — sp_point","text":"lon lon lat lat ID name point proj4 projection export write shafefile default = F runDir character runtime folder","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/sp_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create an spatialpointobject from 1 points — sp_point","text":"","code":"## creating sp spatial point object point <- sp_point(8.770362,50.815240,ID=\"Faculty of Geographie Marburg\")  ## plot it raster::plot(point)"},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"DEM data set of Marburg-Biedenkopf — tutdata_dem","title":"DEM data set of Marburg-Biedenkopf — tutdata_dem","text":"DEM data set resampled 20 m resolution","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_dem.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DEM data set of Marburg-Biedenkopf — tutdata_dem","text":"\"raster::raster\"","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_dem.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"DEM data set of Marburg-Biedenkopf — tutdata_dem","text":"Faculty Geography UAV derived data Marburg University Forest first campaign","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_dem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DEM data set of Marburg-Biedenkopf — tutdata_dem","text":"DEM data set Marburg-Biedenkopf","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_flightarea.html","id":null,"dir":"Reference","previous_headings":"","what":"Flight area planning example data — tutdata_flightarea","title":"Flight area planning example data — tutdata_flightarea","text":"Flight area planning example data typically needed planning autonomous survey flight task","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_flightarea.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flight area planning example data — tutdata_flightarea","text":"Faculty Geography Marburg","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_flightarea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flight area planning example data — tutdata_flightarea","text":"Flight area planning example data","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_flighttrack.html","id":null,"dir":"Reference","previous_headings":"","what":"GPX example data — tutdata_flighttrack","title":"GPX example data — tutdata_flighttrack","text":"GPX example data derived 3DR Solo flight","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_flighttrack.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GPX example data — tutdata_flighttrack","text":"Faculty Geography UAV derived data Marburg University Forest first campaign","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_flighttrack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GPX example data — tutdata_flighttrack","text":"GPX example data","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_position.html","id":null,"dir":"Reference","previous_headings":"","what":"position example data — tutdata_position","title":"position example data — tutdata_position","text":"position data planning single flight task focus known objects","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_position.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"position example data — tutdata_position","text":"Faculty Geography UAV derived data Marburg University Forest first campaign","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_position.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"position example data — tutdata_position","text":"Virtual object position  coordinates example data","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_waypoints.html","id":null,"dir":"Reference","previous_headings":"","what":"MAVLINK waypoint example data — tutdata_waypoints","title":"MAVLINK waypoint example data — tutdata_waypoints","text":"Waypoint file","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_waypoints.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MAVLINK waypoint example data — tutdata_waypoints","text":"Faculty Geography UAV derived data Marburg University Forest first campaign","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/tutdata_waypoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MAVLINK waypoint example data — tutdata_waypoints","text":"MAVLINK waypoint example data","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/uavRmp.html","id":null,"dir":"Reference","previous_headings":"","what":"UAV Mission Planner — uavRmp","title":"UAV Mission Planner — uavRmp","text":"package provides mission planning functionality dealing Unmanned Aerial Vehicles. focus set easy use workflow planning autonomous obstacle avoiding surveys rtf-UAVs retrieve aerial spot related data. provides either intermediate flight control files DJI phantom x UAVs ready upload control files pixhawk based flightcontroller used 3DR Solo. Additionally contains useful tools digitizing data manipulation.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/uavRmp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UAV Mission Planner — uavRmp","text":"package provides mission planning functionality dealing Unmanned Aerial Vehicles","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/uavRmp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"UAV Mission Planner — uavRmp","text":"important keep mind auxilliary external binaries  like GDAL SAGA need installed properly. correctly system.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/uavRmp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"UAV Mission Planner — uavRmp","text":"Chris Reudenbach Lars Opgenoorth Sebastian Richter Florian Detsch Hanna Meyer Marvin Ludwig Maintainer: Chris Reudenbach reudenbach@uni-marburg.de","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/vecDraw.html","id":null,"dir":"Reference","previous_headings":"","what":"digitizing vector features using a simple leaflet base map — vecDraw","title":"digitizing vector features using a simple leaflet base map — vecDraw","text":"vecDraw designed straightforward digitizing simple geometries without adding attributes. provides bunch leaflet base maps optionally sf* object can loaded orientation.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/vecDraw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"digitizing vector features using a simple leaflet base map — vecDraw","text":"","code":"vecDraw(   mapCenter = NULL,   zoom = 15,   line = TRUE,   rectangle = TRUE,   poly = TRUE,   circle = TRUE,   point = TRUE,   remove = TRUE,   position = \"topright\",   maplayer = c(\"CartoDB.Positron\", \"OpenStreetMap\", \"Esri.WorldImagery\",     \"Thunderforest.Landscape\", \"OpenTopoMap\"),   overlay = NULL,   preset = \"all\",   locPreset = \"muf\",   cex = 10,   lwd = 2,   opacity = 0.7 )"},{"path":"https://r-spatial.github.io/uavRmp/reference/vecDraw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"digitizing vector features using a simple leaflet base map — vecDraw","text":"mapCenter center leaflet map zoom set initial zoom level leaflet map line enable/disable line tool rectangle enable/disable polygon tool poly enable/disable polygon tool circle enable/disable circle tool point enable/disable point tool remove enable/disable remove feature draw tool position toolbar layout (topright, topleft, bottomright, bottomleft) maplayer string provided leaflet-provider overlay optional sp* object may used orientation preset character default \"uav\" line based mission digitizing, \"ext\" rectangles, NULL drawing items locPreset character location preset, default \"muf\" Marburg University Forest,  \"tra\" Traddelstein, \"hag\" Hagenstein, \"baw\" Bayerwald. cex size item lwd line width item opacity opacity item","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/vecDraw.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"digitizing vector features using a simple leaflet base map — vecDraw","text":"Yu can either save digitized object json (JS) kml (KML) file.","code":""},{"path":"https://r-spatial.github.io/uavRmp/reference/vecDraw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"digitizing vector features using a simple leaflet base map — vecDraw","text":"","code":"if (FALSE) { # fully featured without overlay require(mapview)  # preset for digitizing uav flight areas using Meuse data set as overlay require(sp) data(meuse)  sp::coordinates(meuse) <- ~x+y  sp::proj4string(meuse) <-CRS(\"+init=epsg:28992\")  m <- sp::spTransform(meuse,CRSobj = sp::CRS(\"+init=epsg:4326\")) vecDraw(overlay = m, preset = \"uav\")    # preset for digitizing simple rectangles extents vecDraw(preset=\"ext\",overlay = m) }"},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-057","dir":"Changelog","previous_headings":"","what":"uavRmp 0.5.7","title":"uavRmp 0.5.7","text":"CRAN release: 2020-07-03 bugfixes: * fix cran issue maptools * fix several R 4.x problems","code":""},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-056","dir":"Changelog","previous_headings":"","what":"uavRmp 0.5.6","title":"uavRmp 0.5.6","text":"bugfixes: * fix import functionality QGroundcontrol flight planning files * fix wrong calculation buffers * add documentation qgroundcontrol survey files","code":""},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-055","dir":"Changelog","previous_headings":"","what":"uavRmp 0.5.5","title":"uavRmp 0.5.5","text":"new features: * add sf dupport vecdraw overlay * add preliminary import functionality QGroundcontrol flight planning files bugfixes: * fix gdalUtils issues * fix wrong cropping launchposition outside task","code":""},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-054","dir":"Changelog","previous_headings":"","what":"uavRmp 0.5.4","title":"uavRmp 0.5.4","text":"CRAN release: 2018-10-28 bugfixes: * fix sf gdalUtils conflict * fix NEWS NEWS.md","code":""},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-053","dir":"Changelog","previous_headings":"","what":"uavRmp 0.5.3","title":"uavRmp 0.5.3","text":"CRAN release: 2018-01-12 new features: * add common GEOJSON support flightareas bugfixes: * fix CRAN issues","code":""},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-052","dir":"Changelog","previous_headings":"","what":"uavRmp 0.5.2","title":"uavRmp 0.5.2","text":"new features: * add point flight mode * add service functions * add Agisoft scripting support * new folder structure bugfixes: * fix turning UAV turnpoints * fix several small bugs","code":""},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-051","dir":"Changelog","previous_headings":"","what":"uavrmp 0.5.1","title":"uavrmp 0.5.1","text":"CRAN release: 2017-10-11 new features: changes: bugfixes: fix non CRAN compliant examples. fix runtime errors","code":""},{"path":"https://r-spatial.github.io/uavRmp/news/index.html","id":"uavrmp-050","dir":"Changelog","previous_headings":"","what":"uavRmp 0.5.0","title":"uavRmp 0.5.0","text":"Initial release","code":""}]
